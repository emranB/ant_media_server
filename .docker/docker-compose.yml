version: "3"
name: "RAD_main_node"   # Used in container naming covention as a prefix


# Define all networks in use
networks:
  # Shared network wihin containers listed below
  cloud_manager:
    name: cloud_manager   # if not defined, the project root name will get appended to network name
    driver: bridge
    ipam:                 # ipam needed for specifying static IPs for containers from services below
      config:
        - subnet: 172.23.0.0/24
          gateway: 172.23.0.1
  # Global network        
  host:
    external:
      name: host


# Define services to build and run
services:
  # Needed for kafka broker management
  zookeeper:
    build: ./zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.5

  # Message passing service
  kafka:
    build: ./kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: 172.23.0.5:2181
      KAFKA_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_HOST://172.23.0.7:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_HOST://172.23.0.7:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.7

  # Streaming service (source)
  gstreamer:
    build: ./gstreamer
    container_name: gstreamer
    working_dir: /start
    tty: true   # keep alive, equivalent to `-t` on the terminal
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.3

  # Streaming service (sink)
  media_server:
    privileged: true
    build: 
      context: ./media_server
      args: 
        AntMediaServer: ant-media-server-community-2.5.1.zip
    container_name: media_server
    ports:
      - target: 5080
        published: 5080
        mode: host
      - "3000:3000"
      - "9200:9200"
      # - "9092:9092"
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.2
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

  # Database - mongoDb
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: storage_files
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    networks:
      cloud_manager:
        ipv4_address: 172.23.0.10

